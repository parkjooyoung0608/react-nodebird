{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\miqkr\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\project\\\\NodeBird\\\\prepare\\\\front\\\\components\\\\PostCardContent.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Link } from \"next/link\";\n// import { PropTypes } from \"prop-types\";\n\nconst PostCardContent = ({\n  postData\n}) => {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, postData.split(/(#[^\\s#]+)/g).map(v => {\n    if (v.match(/(#[^\\s#]+)/)) {\n      return __jsx(Link, {\n        href: `/hashtag/${v.slice(1)}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }\n      }, __jsx(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 15\n        }\n      }, v));\n    }\n    return v;\n  }));\n};\n\n// const PostCardContent = ({ postData }) => {\n//   return (\n//     <div>\n//       {postData?.split(/(#[^\\s#]+)/g).map((v, i) => {\n//         if (v.match(/(#[^\\s#]+)/g)) {\n//           return (\n//             <Link href={`/hashtag/${v.slice(1)}`} key={i}>\n//               <a>{v}</a>\n//             </Link>\n//           );\n//         }\n//         return v;\n//       })}\n//     </div>\n//   );\n// };\n\n// PostCardContent.PropTypes = { postData: PropTypes.string.isRequired };\n\nexport default PostCardContent;","map":{"version":3,"names":["React","Link","PostCardContent","postData","split","map","v","match","slice"],"sources":["C:/Users/miqkr/OneDrive/바탕 화면/project/NodeBird/prepare/front/components/PostCardContent.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"next/link\";\r\n// import { PropTypes } from \"prop-types\";\r\n\r\nconst PostCardContent = ({ postData }) => {\r\n  return (\r\n    <div>\r\n      {postData.split(/(#[^\\s#]+)/g).map((v) => {\r\n        if (v.match(/(#[^\\s#]+)/)) {\r\n          return (\r\n            <Link href={`/hashtag/${v.slice(1)}`}>\r\n              <a>{v}</a>\r\n            </Link>\r\n          );\r\n        }\r\n        return v;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\n// const PostCardContent = ({ postData }) => {\r\n//   return (\r\n//     <div>\r\n//       {postData?.split(/(#[^\\s#]+)/g).map((v, i) => {\r\n//         if (v.match(/(#[^\\s#]+)/g)) {\r\n//           return (\r\n//             <Link href={`/hashtag/${v.slice(1)}`} key={i}>\r\n//               <a>{v}</a>\r\n//             </Link>\r\n//           );\r\n//         }\r\n//         return v;\r\n//       })}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// PostCardContent.PropTypes = { postData: PropTypes.string.isRequired };\r\n\r\nexport default PostCardContent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,WAAW;AAChC;;AAEA,MAAMC,eAAe,GAAG,CAAC;EAAEC;AAAS,CAAC,KAAK;EACxC,OACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGA,QAAQ,CAACC,KAAK,CAAC,aAAa,CAAC,CAACC,GAAG,CAAEC,CAAC,IAAK;IACxC,IAAIA,CAAC,CAACC,KAAK,CAAC,YAAY,CAAC,EAAE;MACzB,OACE,MAAC,IAAI;QAAC,IAAI,EAAG,YAAWD,CAAC,CAACE,KAAK,CAAC,CAAC,CAAE,EAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACnC;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAIF,CAAC,CAAK,CACL;IAEX;IACA,OAAOA,CAAC;EACV,CAAC,CAAC,CACE;AAEV,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,eAAeJ,eAAe"},"metadata":{},"sourceType":"module"}