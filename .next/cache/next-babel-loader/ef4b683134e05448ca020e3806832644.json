{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\miqkr\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\project\\\\NodeBird\\\\prepare\\\\front\\\\components\\\\PostCardContent.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Link } from \"next/link\";\nimport { PropTypes } from \"prop-types\";\nvar PostCardContent = function PostCardContent(_ref) {\n  var postData = _ref.postData;\n  var hashtag = postData.split(/(#[^\\s#]+)/g);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, hashtag.map(function (v, i) {\n    if (v.match(/(#[^\\s#]+)/)) {\n      return __jsx(Link, {\n        href: \"/hashtag/\".concat(v.slice(1), \"/\"),\n        key: i,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }\n      }, __jsx(\"a\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 15\n        }\n      }, v));\n    }\n  }));\n};\n_c = PostCardContent;\nPostCardContent.PropTypes = {\n  postData: PropTypes.string.isRequired\n};\nexport default PostCardContent;\nvar _c;\n$RefreshReg$(_c, \"PostCardContent\");","map":{"version":3,"names":["React","Link","PropTypes","PostCardContent","postData","hashtag","split","map","v","i","match","slice","string","isRequired"],"sources":["C:/Users/miqkr/OneDrive/바탕 화면/project/NodeBird/prepare/front/components/PostCardContent.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"next/link\";\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nconst PostCardContent = ({ postData }) => {\r\n  const hashtag = postData.split(/(#[^\\s#]+)/g);\r\n\r\n  return (\r\n    <div>\r\n      {hashtag.map((v, i) => {\r\n        if (v.match(/(#[^\\s#]+)/)) {\r\n          return (\r\n            <Link href={`/hashtag/${v.slice(1)}/`} key={i}>\r\n              <a>{v}</a>\r\n            </Link>\r\n          );\r\n        }\r\n      })}\r\n      {/* {postData.split(/(#[^\\s#]+)/g).map((v, i) => {\r\n      if (v.match(/(#[^\\s#]+)/)) {\r\n        return (\r\n          <Link href={`/hashtag/${v.slice(1)}`} key={i}>\r\n            <a>{v}</a>\r\n          </Link>\r\n        );\r\n      }\r\n      return v;\r\n    })} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nPostCardContent.PropTypes = { postData: PropTypes.string.isRequired };\r\n\r\nexport default PostCardContent;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,WAAW;AAChC,SAASC,SAAS,QAAQ,YAAY;AAEtC,IAAMC,eAAe,GAAG,SAAlBA,eAAe,OAAqB;EAAA,IAAfC,QAAQ,QAARA,QAAQ;EACjC,IAAMC,OAAO,GAAGD,QAAQ,CAACE,KAAK,CAAC,aAAa,CAAC;EAE7C,OACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGD,OAAO,CAACE,GAAG,CAAC,UAACC,CAAC,EAAEC,CAAC,EAAK;IACrB,IAAID,CAAC,CAACE,KAAK,CAAC,YAAY,CAAC,EAAE;MACzB,OACE,MAAC,IAAI;QAAC,IAAI,qBAAcF,CAAC,CAACG,KAAK,CAAC,CAAC,CAAC,MAAI;QAAC,GAAG,EAAEF,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAC5C;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAID,CAAC,CAAK,CACL;IAEX;EACF,CAAC,CAAC,CAWE;AAEV,CAAC;AAAC,KA1BIL,eAAe;AA4BrBA,eAAe,CAACD,SAAS,GAAG;EAAEE,QAAQ,EAAEF,SAAS,CAACU,MAAM,CAACC;AAAW,CAAC;AAErE,eAAeV,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module"}