{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\miqkr\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\project\\\\NodeBird\\\\prepare\\\\front\\\\components\\\\ImagesZoom\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport Slick from \"react-slick\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nconst Overlay = styled.div`\n  /* fixed 전체 화면 채우는 방법 */\n  position: fixed;\n  z-index: 5000;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n`;\nconst Header = styled.header`\n  height: 33px;\n  background-color: white;\n  position: relative;\n  padding: 0;\n  text-align: center;\n\n  & h1 {\n    margin: 0;\n    font-size: 17px;\n    color: #333;\n    line-height: 44px;\n  }\n\n  & button {\n    position: absolute;\n    right: 0;\n    top: 0;\n    padding: 15px;\n    line-height: 14px;\n    cursor: pointer;\n  }\n`;\nconst SlickWrapper = styled.div`\n  height: calc(100% - 44px);\n  background-color: #090909;\n`;\nconst ImgWrapper = styled.div`\n  padding: 32px;\n  text-align: center;\n\n  & img {\n    margin: 0 auto;\n    max-height: 750px;\n  }\n`;\nconst Indicator = styled.div`\n  text-align: center;\n\n  & > div {\n    display: inline-block;\n    width: 75px;\n    height: 30px;\n    line-height: 30px;\n    color: white;\n    font-size: 15px;\n    text-align: center;\n    border-radius: 15px;\n    background-color: #313131;\n  }\n`;\nconst Global = createGlobalStyle`\n.slick-slide{\n    display:inline-blcok;\n}`;\nconst ImagesZoom = ({\n  images,\n  onClose\n}) => {\n  const {\n    0: currentSlide,\n    1: setCurrentSlide\n  } = useState(0); // 현재 슬라이드 번호 저장\n\n  return __jsx(Overlay, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"\\uC0C1\\uC138 \\uC774\\uBBF8\\uC9C0\"), __jsx(\"button\", {\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \"X\")), __jsx(SlickWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, __jsx(Slick, {\n    initialSlide: 0 // 첫 번째 나올 이미지는 index 몇번으로 할 것인지\n    ,\n    afterChange: slide => setCurrentSlide(slide) // 페이지를 넘기면 slide 번호를 state로 저장\n    ,\n    infinite: true // 무한 반복\n    ,\n    arrows: false // 화살표 지우기 (손으로만 슬라이드 가능)\n    ,\n    slidesToShow: 1 // 한번에 하나씩만 보이도록\n    ,\n    slidesToScroll: 1 // 한번에 하나씩만 넘길 수 있도록\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, images.map(v => __jsx(ImgWrapper, {\n    key: v.src,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, __jsx(\"img\", {\n    src: v.src,\n    alt: v.src,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  })))))));\n};\nImagesZoom.PropTypes = {\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onClose: PropTypes.func.isRequired\n};\nexport default ImagesZoom;","map":{"version":3,"names":["React","useState","PropTypes","Slick","styled","createGlobalStyle","Overlay","div","Header","header","SlickWrapper","ImgWrapper","Indicator","Global","ImagesZoom","images","onClose","currentSlide","setCurrentSlide","slide","map","v","src","arrayOf","object","isRequired","func"],"sources":["C:/Users/miqkr/OneDrive/바탕 화면/project/NodeBird/prepare/front/components/ImagesZoom/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport Slick from \"react-slick\";\r\nimport styled, { createGlobalStyle } from \"styled-components\";\r\n\r\nconst Overlay = styled.div`\r\n  /* fixed 전체 화면 채우는 방법 */\r\n  position: fixed;\r\n  z-index: 5000;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 33px;\r\n  background-color: white;\r\n  position: relative;\r\n  padding: 0;\r\n  text-align: center;\r\n\r\n  & h1 {\r\n    margin: 0;\r\n    font-size: 17px;\r\n    color: #333;\r\n    line-height: 44px;\r\n  }\r\n\r\n  & button {\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    padding: 15px;\r\n    line-height: 14px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst SlickWrapper = styled.div`\r\n  height: calc(100% - 44px);\r\n  background-color: #090909;\r\n`;\r\n\r\nconst ImgWrapper = styled.div`\r\n  padding: 32px;\r\n  text-align: center;\r\n\r\n  & img {\r\n    margin: 0 auto;\r\n    max-height: 750px;\r\n  }\r\n`;\r\n\r\nconst Indicator = styled.div`\r\n  text-align: center;\r\n\r\n  & > div {\r\n    display: inline-block;\r\n    width: 75px;\r\n    height: 30px;\r\n    line-height: 30px;\r\n    color: white;\r\n    font-size: 15px;\r\n    text-align: center;\r\n    border-radius: 15px;\r\n    background-color: #313131;\r\n  }\r\n`;\r\n\r\nconst Global = createGlobalStyle`\r\n.slick-slide{\r\n    display:inline-blcok;\r\n}`;\r\n\r\nconst ImagesZoom = ({ images, onClose }) => {\r\n  const [currentSlide, setCurrentSlide] = useState(0); // 현재 슬라이드 번호 저장\r\n\r\n  return (\r\n    <Overlay>\r\n      <Header>\r\n        <h1>상세 이미지</h1>\r\n        <button onClick={onClose}>X</button>\r\n      </Header>\r\n      <SlickWrapper>\r\n        <div>\r\n          <Slick\r\n            initialSlide={0} // 첫 번째 나올 이미지는 index 몇번으로 할 것인지\r\n            afterChange={(slide) => setCurrentSlide(slide)} // 페이지를 넘기면 slide 번호를 state로 저장\r\n            infinite // 무한 반복\r\n            arrows={false} // 화살표 지우기 (손으로만 슬라이드 가능)\r\n            slidesToShow={1} // 한번에 하나씩만 보이도록\r\n            slidesToScroll={1} // 한번에 하나씩만 넘길 수 있도록\r\n          >\r\n            {/* Slick이 자동으로 Slick안에 있는 div들을 캐러셀로 만들어준다. */}\r\n            {images.map((v) => (\r\n              <ImgWrapper key={v.src}>\r\n                <img src={v.src} alt={v.src} />\r\n              </ImgWrapper>\r\n            ))}\r\n          </Slick>\r\n        </div>\r\n      </SlickWrapper>\r\n    </Overlay>\r\n  );\r\n};\r\n\r\nImagesZoom.PropTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImagesZoom;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,YAAY;AACtC,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,MAAM,IAAIC,iBAAiB,QAAQ,mBAAmB;AAE7D,MAAMC,OAAO,GAAGF,MAAM,CAACG,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,MAAM,GAAGJ,MAAM,CAACK,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,YAAY,GAAGN,MAAM,CAACG,GAAI;AAChC;AACA;AACA,CAAC;AAED,MAAMI,UAAU,GAAGP,MAAM,CAACG,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMK,SAAS,GAAGR,MAAM,CAACG,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMM,MAAM,GAAGR,iBAAkB;AACjC;AACA;AACA,EAAE;AAEF,MAAMS,UAAU,GAAG,CAAC;EAAEC,MAAM;EAAEC;AAAQ,CAAC,KAAK;EAC1C,MAAM;IAAA,GAACC,YAAY;IAAA,GAAEC;EAAe,IAAIjB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAErD,OACE,MAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACN,MAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACL;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,qCAAe,EACf;IAAQ,OAAO,EAAEe,OAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,OAAW,CAC7B,EACT,MAAC,YAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,MAAC,KAAK;IACJ,YAAY,EAAE,CAAE,CAAC;IAAA;IACjB,WAAW,EAAGG,KAAK,IAAKD,eAAe,CAACC,KAAK,CAAE,CAAC;IAAA;IAChD,QAAQ,OAAC;IAAA;IACT,MAAM,EAAE,KAAM,CAAC;IAAA;IACf,YAAY,EAAE,CAAE,CAAC;IAAA;IACjB,cAAc,EAAE,CAAE,CAAC;IAAA;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAGlBJ,MAAM,CAACK,GAAG,CAAEC,CAAC,IACZ,MAAC,UAAU;IAAC,GAAG,EAAEA,CAAC,CAACC,GAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACrB;IAAK,GAAG,EAAED,CAAC,CAACC,GAAI;IAAC,GAAG,EAAED,CAAC,CAACC,GAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAElC,CAAC,CACI,CACJ,CACO,CACP;AAEd,CAAC;AAEDR,UAAU,CAACZ,SAAS,GAAG;EACrBa,MAAM,EAAEb,SAAS,CAACqB,OAAO,CAACrB,SAAS,CAACsB,MAAM,CAAC,CAACC,UAAU;EACtDT,OAAO,EAAEd,SAAS,CAACwB,IAAI,CAACD;AAC1B,CAAC;AAED,eAAeX,UAAU"},"metadata":{},"sourceType":"module"}